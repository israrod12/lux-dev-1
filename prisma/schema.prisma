// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(cuid())
  name                String?
  email               String                @unique
  emailVerified       DateTime?
  image               String?
  password            String
  isVerified          Boolean               @default(false)
  dateOfBirth         DateTime?
  documentExpiresAt   DateTime?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt

  // Relations
  sessions            Session[]
  accounts            Account[]
  verificationSessions VerificationSession[]

  @@map("users")
}

model VerificationSession {
  id            String   @id @default(cuid())
  userId        String
  sessionId     String   @unique
  status        String   @default("NOT_STARTED") // Changed to String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("verification_sessions")
}

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}